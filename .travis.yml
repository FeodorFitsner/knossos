language: cpp

compiler:
  - clang
  - gcc

before_install:
  - lsb_release -a # 12.04 assumed
  - sudo add-apt-repository -y ppa:boost-latest/ppa # boost 1.55
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test # gcc4.8
  - sudo add-apt-repository -y ppa:andykimpe/cmake3 # CMake 3.0.0
  - sudo apt-add-repository -y ppa:yjwong/libjpeg-turbo # libjpeg-turbo 1.3.0
  - sudo apt-add-repository -y ppa:arankine/backports # ninja-build 1.3.4
  - sudo apt-add-repository -y ppa:beineri/opt-qt531 # Qt 5.3.1
  - sudo apt-get update -y
  - sudo apt-get -y install cmake3
  - sudo apt-get -y install freeglut3-dev
  - sudo apt-get -y install gcc-4.8 g++-4.8
  - sudo apt-get -y install libboost1.55-dev
  - sudo apt-get -y install libcurl4-openssl-dev
  - sudo apt-get -y install libjpeg-turbo8-dev
  - sudo apt-get -y install libxmu-dev libxi-dev
  - sudo apt-get -y install ninja-build
  - sudo apt-get -y install qt53base qt53tools
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 20
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 20
  - sudo update-alternatives --config gcc
  - sudo update-alternatives --config g++
  - source /opt/qt53/bin/qt53-env.sh

before_script:
  - wget http://downloads.sourceforge.net/project/quazip/quazip/0.7/quazip-0.7.tar.gz
  - tar -xzf quazip-0.7.tar.gz
  - mkdir quazip-build
  - cd quazip-build
  - cmake -G Ninja -DCMAKE_BUILD_TYPE=RELEASE "../quazip-0.7"
  - sudo ninja install
  - cd ..
  - git clone https://github.com/Orochimarufan/PythonQt.git
  - echo "message(skipping QtAll)" > extensions/CMakeLists.txt
  - sed -i '/add_dependencies(QtAll ${PythonQt_QtAll})/c\#add_dependencies(QtAll ${PythonQt_QtAll})' CMakeLists.txt
  - mkdir _debug
  - cd _debug
  - cmake -G Ninja -DCMAKE_BUILD_TYPE=DEBUG -DPythonQt_Qt5=TRUE -DPythonQt_DEBUG=TRUE ..
  - sudo ninja install
  - cd ..
  - mkdir _release
  - cd _release
  - cmake -G Ninja -DCMAKE_BUILD_TYPE=RELEASE -DPythonQt_Qt5=TRUE ..
  - sudo ninja install
  - cd ..
  - mkdir build_debug
  - cd build_debug
  - cmake -G Ninja -DCMAKE_BUILD_TYPE=DEBUG ..
  - cd ..
  - mkdir build_release
  - cd build_release
  - cmake -G Ninja -DCMAKE_BUILD_TYPE=RELEASE ..
  - cd ..

script:
  - cd build_debug
  - ninja -j3
  - cd ..
  - cd build_release
  - ninja -j3
  - cd ..